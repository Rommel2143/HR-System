<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Guna2ShadowForm1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Guna2Button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        7AAAAOwBeShxvQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAO2SURBVFhHtZZJ
        TBNhFIB7UxP1ZqLRA8IAokJEY9wOHoxGEy8e3K7Gg9GD8ebNcHE/KgqIiRc9a2KlU6Ai0CKdoWU1rELL
        VnalAt34fe/v3zKdPoaWwku+ZGbeNvP//3vzTKmKZG7amSs7b0pVSkWurDZLFmUCCAomxLPyHIvzRv7n
        hh3CLXPJrv6ZJ1nUSgj+D2ApgrbvsmVXrgiTvuyz27dJsvISAoU0gdMlCCvyPMtm2yrCpib45uDcrguW
        CY6CKmWPCG8sktVZDA64v1SgTPDu/6YWiTS0iC/fjOQxvFlfm3eLdImC+wQGbp3DZqDg+RJpV0QcOMoh
        ztkfbeTztJGVEpE2KtFSMz7tx2pdrGFqjl+f+t7K7rn72dNuL3vWPczuuvvYSVtrko8B8wlbIeqcMoxT
        8XuMBSMRVjsxy8LLEcbYcgL4zOKbYefq20l/gtJocuhwcGPYZHDpA5A8lmwyEGAfPT5W8svDHnUN8euJ
        pQDXLUbC7H5rPxlHh593TN5eaYM4X0an4smRhx2DSTYHZJW96BnmK4HccfUl2ejJsajXTdjbKWWMg1aV
        7/Or/hFWNjDKqRwcY+frO0h7PBuR5WU2GwyyEzY3aRMj1+IsgxXgPxHSYL18GBrnK/UaXprSa3DgCkwS
        iow4DVWC2zCyuETqNfigApSA7mGc47Vu9qBtIN0S43T88fNVOAMvQ+kFS4YvcMXRxYNgeVF6I6zgg76X
        7Z2kXgAvYLAFlxo7eZC6yWgDSgdsWuh7sZE+rAKf4SEsrG7hzWc6EGR5Mm1DkQ8liT4hOAcFUEWUjQAO
        IYxRuocJNIovSaWuY2BrRh/b5CypjwF94K0JZzhKGeN2Sy8P5l1YZEdqXKSNlqNg4wFb9Lml9pA2cWTl
        qumQrXM73PiTlBrM49M8oDr7l1cGZYNgtaAN2laBD2WjwY+5o/8DGCB1ygSK4atigWegw+FfUPtrxmvs
        llOw72jjmptnRXB+tDEIynlyFDEJ4XhNGXLwQH7y+nibxSTIQjjM5kOh+D3q0Oawdc3kgbxqZ7ZIHxWc
        XgnDJLA08V/QBo0G+/1cMMTa4fo9PLvQYFhyWp6ItCsiRjKHznATcNolc+8WkTZRcEoBI0+y04Yxklfj
        3ivS0YKjMxh6dY4bgSfbqhSKNMYimVt2wVLVEUHWidO+6ji+muA+4fQKAQx7xBrgj+7xqnueiohzUQqk
        8yJ+nHaSSi0Twa6FMxz2b0jQBPgA/EIEr5tyZOWNVKVei3e4NcVk+g93QB1sXYkJkQAAAABJRU5ErkJg
        gg==
</value>
  </data>
</root>